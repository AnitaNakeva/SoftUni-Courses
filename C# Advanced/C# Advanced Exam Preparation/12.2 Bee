using System;
using System.Collections.Generic;
using System.Linq;

namespace ConsoleApp111
{
    internal class Program
    {
        public static int n = int.Parse(Console.ReadLine());
        public static char[,] matrix;
        public static int row;
        public static int col;
        public static int polFlowers = 0;
        public static bool IsOutside = false;

        public static void GoDirection(int a, int b)
        {
            matrix[row, col] = '.';
            if(IsInside(row+a,col+b))
            {
                row += a;
                col += b;
                if(matrix[row, col]=='f')
                {
                    polFlowers++;
                    matrix[row, col] = 'B';
                }
                else if(matrix[row, col]=='O')
                {
                    if(IsInside(row+a,col+b))
                    {
                        matrix[row, col] = '.';
                        row += a;
                        col += b;
                        if(matrix[row,col]=='f')
                        {
                            polFlowers++;
                            matrix[row, col] = 'B';
                        }
                        else
                        {
                            matrix[row, col] = 'B';
                        }
                    }
                    else
                    {
                        IsOutside = true;
                    }
                }
                else
                {
                    matrix[row, col] = 'B';
                }
            }
            else
            {
                IsOutside = true;
            }
        }

        public static bool IsInside(int row, int col)
        {
            return row >= 0 && row < n && col >= 0 && col < n;
        }
        static void Main(string[] args)
        {
            matrix = new char[n, n];
            for (int i = 0; i < n; i++)
            {
                string line = Console.ReadLine();
                for (int j = 0; j < n; j++)
                {
                    matrix[i, j] = char.Parse(line[j].ToString());
                    if(matrix[i,j]=='B')
                    {
                        row = i;
                        col = j;
                    }
                }
            }

            string command = Console.ReadLine();
            while(command!="End"&&IsOutside==false)
            {
                if(command=="up")
                {
                    GoDirection(-1, 0);
                }
                else if (command == "down")
                {
                    GoDirection(1, 0);
                }
                else if (command == "left")
                {
                    GoDirection(0, -1);
                }
                else if (command == "right")
                {
                    GoDirection(0, 1);
                }
                if (!IsOutside)
                {
                    command = Console.ReadLine();
                }
                    
            }

            if(IsOutside)
            {
                Console.WriteLine("The bee got lost!");
            }

            if(polFlowers>=5)
            {
                Console.WriteLine($"Great job, the bee managed to pollinate {polFlowers} flowers!");
            }
            else
            {
                Console.WriteLine($"The bee couldn't pollinate the flowers, she needed {5-polFlowers} flowers more");
            }

            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write(matrix[i,j]);
                }
                Console.WriteLine();
            }
        }
    }
}
