using System;
using System.Collections.Generic;
using System.Linq;

namespace ConsoleApp107
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Dictionary<string, int> bakedFood = new Dictionary<string, int>();
            bakedFood.Add("Bread", 0);
            bakedFood.Add("Cake", 0);
            bakedFood.Add("Pastry", 0);
            bakedFood.Add("Fruit Pie", 0);

            Queue<int> liquids = new Queue<int>(Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries).Select(int.Parse));
            Stack<int> ingredients = new Stack<int>(Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries).Select(int.Parse));

            while (liquids.Any() && ingredients.Any()) 
            {
                int curLic = liquids.Peek();
                int curIng = ingredients.Peek();
                int sum = curIng + curLic;
                if(sum==25)
                {
                    bakedFood["Bread"]++;
                    liquids.Dequeue();
                    ingredients.Pop();
                }
                else if (sum == 50)
                {
                    bakedFood["Cake"]++;
                    liquids.Dequeue();
                    ingredients.Pop();
                }
                else if (sum == 75)
                {
                    bakedFood["Pastry"]++;
                    liquids.Dequeue();
                    ingredients.Pop();
                }
                else if (sum == 100)
                {
                    bakedFood["Fruit Pie"]++;
                    liquids.Dequeue();
                    ingredients.Pop();
                }
                else
                {
                    liquids.Dequeue();
                    curIng += 3;
                    ingredients.Pop();
                    ingredients.Push(curIng);
                }
            }

            var onlyBakedFood = bakedFood.Where(x => x.Value > 0);
            if(onlyBakedFood.Count()==4)
            {
                Console.WriteLine("Wohoo! You succeeded in cooking all the food!");
            }
            else
            {
                Console.WriteLine("Ugh, what a pity! You didn't have enough materials to cook everything.");
            }

            if (liquids.Count == 0)
            {
                Console.WriteLine("Liquids left: none");
            }
            else
            {
                Console.WriteLine($"Liquids left: {string.Join(", ",liquids)}");
            }

            if (ingredients.Count == 0)
            {
                Console.WriteLine("Ingredients left: none");
            }
            else
            {
                Console.WriteLine($"Ingredients left: {string.Join(", ", ingredients)}");
            }

            var orderedBakedFood = bakedFood.OrderBy(x => x.Key);
            foreach(var item in orderedBakedFood)
            {
                Console.WriteLine(item.Key+": "+item.Value);
            }
        }
    }
}
