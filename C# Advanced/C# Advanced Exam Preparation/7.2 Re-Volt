using System;
using System.Collections.Generic;
using System.Linq;

namespace ConsoleApp115
{
    internal class Program
    {
        public static int n = int.Parse(Console.ReadLine());
        public static int m = int.Parse(Console.ReadLine());
        public static int row;
        public static int col;
        public static char[,] matrix;
        public static bool foundFinish = false;

        public static bool IsInside(int row, int col)
        {
            return row >= 0 && row < n && col >= 0 && col < n;
        }

        public static void MoveDirection(int a, int b)
        {
            matrix[row, col] = '-';
            if (IsInside(row + a, col + b))
            {
                row += a;
                col += b;
                if (matrix[row, col] == 'B')
                {
                    if (IsInside(row + a, col + b))
                    {
                        row += a;
                        col += b;
                        if (matrix[row, col] == 'F')
                        {
                            foundFinish = true;
                        }
                        matrix[row, col] = 'f';
                    }
                    else
                    {
                        if (a != 0)
                        {
                            if (row + a < 0)
                            {
                                row = n - 1;
                            }
                            else
                            {
                                row = 0;
                            }
                            if (matrix[row, col] == 'F')
                            {
                                foundFinish = true;
                            }
                            matrix[row, col] = 'f';
                        }
                        else
                        {
                            if (col + b < 0)
                            {
                                col = n - 1;
                            }
                            else
                            {
                                col = 0;
                            }
                            if (matrix[row, col] == 'F')
                            {
                                foundFinish = true;
                            }
                            matrix[row, col] = 'f';
                        }

                    }
                }
                else if (matrix[row, col] == 'T')
                {
                    if (IsInside(row - a, col - b))
                    {
                        row -= a;
                        col -= b;
                        matrix[row, col] = 'f';
                    }
                    else
                    {
                        if (a != 0)
                        {
                            if (row - a < 0)
                            {
                                row = n - 1;
                            }
                            else
                            {
                                row = 0;
                            }
                            if (matrix[row, col] == 'F')
                            {
                                foundFinish = true;
                            }
                            matrix[row, col] = 'f';
                        }
                        else
                        {
                            if (col - b < 0)
                            {
                                col = n - 1;
                            }
                            else
                            {
                                col = 0;
                            }
                            if (matrix[row, col] == 'F')
                            {
                                foundFinish = true;
                            }
                            matrix[row, col] = 'f';
                        }
                    }
                }
                else if (matrix[row, col] == 'F')
                {
                    foundFinish = true;
                    matrix[row, col] = 'f';
                }
                else
                {
                    matrix[row, col] = 'f';
                }
            }
            else
            {
                if (a != 0)
                {
                    if (row + a < 0)
                    {
                        row = n - 1;
                    }
                    else
                    {
                        row = 0;
                    }
                    if (matrix[row, col] == 'F')
                    {
                        foundFinish = true;
                    }
                    matrix[row, col] = 'f';
                }
                else
                {
                    if (col + b < 0)
                    {
                        col = n - 1;
                    }
                    else
                    {
                        col = 0;
                    }
                    if (matrix[row, col] == 'F')
                    {
                        foundFinish = true;
                    }
                    matrix[row, col] = 'f';
                }
            }
        }

        static void Main(string[] args)
        {
            matrix = new char[n, n];
            for (int i = 0; i < n; i++)
            {
                string line = Console.ReadLine();
                for (int j = 0; j < n; j++)
                {
                    matrix[i, j] = char.Parse(line[j].ToString());
                    if(matrix[i,j]=='f')
                    {
                        row = i;
                        col = j;
                    }
                }
            }

            while (foundFinish == false && m > 0) 
            {
                string command = Console.ReadLine();
                if (command == "up")
                {
                    MoveDirection(-1, 0);
                }
                else if (command == "down")
                {
                    MoveDirection(1, 0);
                }
                else if (command == "left")
                {
                    MoveDirection(0, -1);
                }
                else if (command == "right")
                {
                    MoveDirection(0, 1);
                }
                m--;
            }

            if (foundFinish)
            {
                Console.WriteLine("Player won!");
            }
            else
            {
                Console.WriteLine("Player lost!");
            }

            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write(matrix[i, j]);
                }
                Console.WriteLine();
            }

        }
    } 
}
