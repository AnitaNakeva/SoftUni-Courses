using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace ConsoleApp91
{
    internal class Program
    {
        //public static Dictionary<string, int> words = new Dictionary<string, int>
        //{
        //    { "pear", 4},
        //    {"flour", 5},
        //    {"pork", 4 },
        //    {"olive", 5 }
        //};
        //public static Queue<char> vowels = new Queue<char>(Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries).Select(char.Parse).ToArray());
        ////public static Queue<char> vowels;
        //public static Stack<char> consonants = new Stack<char>(Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries).Select(char.Parse).ToArray());
        ////public static Stack<char> consonants;
        
        static void Main(string[] args)
        {

           Dictionary<string, char[]> words = new Dictionary<string, char[]>
            {
                { "pear", "pear".ToCharArray()},
                {"flour", "flour".ToCharArray()},
                {"pork", "pork".ToCharArray() },
                {"olive", "olive".ToCharArray() }
            };
            char[] v = Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries).Select(char.Parse).ToArray();
            char[] c = Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries).Select(char.Parse).ToArray();
            var vowels = new Queue<char>(v);
            var consonants = new Stack<char>(c);
            

            while (consonants.Any())
            {
                char v1 = vowels.Dequeue();
                char c1 = consonants.Pop();

                var newPear = words["pear"].Where(x => x != v1).Where(x => x != c1).ToArray();
                words["pear"] = newPear;

                var newFlour = words["flour"].Where(x => x != v1).Where(x => x != c1).ToArray();

                words["flour"] = newFlour;

                var newPork = words["pork"].Where(x => x != v1).Where(x => x != c1).ToArray();

                words["pork"] = newPork;

                var newOlive = words["olive"].Where(x => x != v1).Where(x => x != c1).ToArray();

                words["olive"] = newOlive;

                vowels.Enqueue(v1);
            }
            int count = 0;
            foreach (var el in words)
            {
                if (el.Value.Length<=0)
                {
                    count++;
                }
            }
            Console.WriteLine($"Words found: {count}");
            foreach (var el in words)
            {
                if (el.Value.Length <= 0)
                {
                    Console.WriteLine(el.Key);
                }
            }
        }
        
    }
}
